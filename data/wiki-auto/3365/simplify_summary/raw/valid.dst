The size of the byte has historically been hardware dependent and no definitive standards existed that mandated the size.
Sizes from 1 to 48 bits have been used.
The six-bit character code was an often used implementation in early encoding systems and computers using six-bit and nine-bit bytes were common in the 1960s.
These systems often had memory words of 12, 24, 36, 48, or 60 bits, corresponding to 2, 4, 6, 8, or 10 six-bit bytes.
In this era, bit groupings in the instruction stream were often referred to as "syllables", before the term "byte" became common.
The modern "de facto" standard of eight bits, as documented in ISO/IEC 2382-1:1993, is a convenient power of two permitting the binary-encoded values 0 through 255 for one byte—2 to the power 8 is 256.
The international standard IEC 80000-13 codified this common meaning.
Many types of applications use information representable in eight or fewer bits and processor designers optimize for this common usage.
The popularity of major commercial computing architectures has aided in the ubiquitous acceptance of the eight-bit size.
Modern architectures typically use 32- or 64-bit words, built of four or eight bytes.
The unit symbol for the byte was designated as the upper-case letter "B" by the International Electrotechnical Commission (IEC) and Institute of Electrical and Electronics Engineers (IEEE) in contrast to the bit, whose IEEE symbol is a lower-case "b".
Internationally, the unit "octet", symbol "o", explicitly defines a sequence of eight bits, eliminating the ambiguity of the byte.
The term "byte" was coined by Werner Buchholz in June 1956, during the early design phase for the IBM Stretch computer, which had addressing to the bit and variable field length (VFL) instructions with a byte size encoded in the instruction.
It is a deliberate respelling of "bite" to avoid accidental mutation to "bit".
Another origin of "byte" for bit groups smaller than a computers's word size, and in particular groups of four bits, is on record by Louis G. Dooley, who claimed he coined the term while working with Jules Schwartz and Dick Beeler on an air defense system called SAGE at MIT Lincoln Laboratory in 1956 or 1957, which was jointly developed by Rand, MIT, and IBM.
Later on, Schwartz's language JOVIAL actually used the term, but the author recalled vaguely that it was derived from AN/FSQ-31.
Early computers used a variety of four-bit binary-coded decimal (BCD) representations and the six-bit codes for printable graphic patterns common in the U.S. Army (FIELDATA) and Navy.
These representations included alphanumeric characters and special graphical symbols.
These sets were expanded in 1963 to seven bits of coding, called the American Standard Code for Information Interchange (ASCII) as the Federal Information Processing Standard, which replaced the incompatible teleprinter codes in use by different branches of the U.S. government and universities during the 1960s.
ASCII included the distinction of upper- and lowercase alphabets and a set of control characters to facilitate the transmission of written language as well as printing device functions, such as page advance and line feed, and the physical or logical control of data flow over the transmission media.
During the early 1960s, while also active in ASCII standardization, IBM simultaneously introduced in its product line of System/360 the eight-bit Extended Binary Coded Decimal Interchange Code (EBCDIC), an expansion of their six-bit binary-coded decimal (BCDIC) representations used in earlier card punches.
The prominence of the System/360 led to the ubiquitous adoption of the eight-bit storage size, while in detail the EBCDIC and ASCII encoding schemes are different.
In the early 1960s, AT&T introduced digital telephony on long-distance trunk lines.
These used the eight-bit μ-law encoding.
This large investment promised to reduce transmission costs for eight-bit data.
The development of eight-bit microprocessors in the 1970s popularized this storage size.
Microprocessors such as the Intel 8008, the direct predecessor of the 8080 and the 8086, used in early personal computers, could also perform a small number of operations on the four-bit pairs in a byte, such as the decimal-add-adjust (DAA) instruction.
A four-bit quantity is often called a nibble, also "nybble", which is conveniently represented by a single hexadecimal digit.
The term "octet" is used to unambiguously specify a size of eight bits.
It is used extensively in protocol definitions.
Historically, the term "octad" or "octade" was used to denote eight bits as well at least in Western Europe; however, this usage is no longer common.
The exact origin of the term is unclear, but it can be found in British, Dutch, and German sources of the 1960s and 1970s, and throughout the documentation of Philips mainframe computers.
The unit symbol for the byte is specified in IEC 80000-13, IEEE 1541 and the Metric Interchange Format as the upper-case character "B".
In contrast, IEEE 1541 specifies the lower case character "b" as the symbol for the bit, but IEC 80000-13 and Metric-Interchange-Format specify the symbol as "bit", providing disambiguation from B for byte.
In the International System of Quantities (ISQ), B is the symbol of the "bel", a unit of logarithmic power ratios named after Alexander Graham Bell, creating a conflict with the IEC specification.
However, little danger of confusion exists, because the bel is a rarely used unit.
It is used primarily in its decadic fraction, the decibel (dB), for signal strength and sound pressure level measurements, while a unit for one tenth of a byte, the decibyte, and other fractions, are only used in derived units, such as transmission rates.
The lowercase letter o for octet is defined as the symbol for octet in IEC 80000-13 and is commonly used in languages such as French and Romanian, and is also combined with metric prefixes for multiples, for example ko and Mo.
The usage of the term "octad(e)" for eight bits is no longer common.
Despite standardization efforts, ambiguity still exists in the meanings of the SI (or metric) prefixes used with the unit byte, especially concerning the prefixes "kilo" (k or K), "mega" (M), and "giga" (G).
Computer memory has a binary architecture in which multiples are expressed in powers of 2.
In some fields of the software and computer hardware industries a binary prefix is used for bytes and bits, while producers of computer storage devices practice adherence to decimal SI multiples.
For example, a computer disk drive capacity of 100 gigabytes is specified when the disk contains 100 billion bytes (93 gibibytes) of storage space.
While the numerical difference between the decimal and binary interpretations is relatively small for the prefixes kilo and mega, it grows to over 20% for prefix yotta.
The linear–log graph illustrates the difference versus storage size up to an exabyte.
Many programming languages defined the data type "byte".
The C and C++ programming languages define "byte" as an ""addressable unit of data storage large enough to hold any member of the basic character set of the execution environment"" (clause 3.6 of the C standard).
The C standard requires that the integral data type "unsigned char" must hold at least 256 different values, and is represented by at least eight bits (clause 5.2.4.2.1).
Various implementations of C and C++ reserve 8, 9, 16, 32, or 36 bits for the storage of a byte.
In addition, the C and C++ standards require that there are no "gaps" between two bytes.
This means every bit in memory is part of a byte.
Java's primitive codice_1 data type is always defined as consisting of 8 bits and being a signed data type, holding values from −128 to 127.
NET programming languages, such as C#, define both an unsigned codice_1 and a signed codice_3, holding values from 0 to 255, and −128 to 127, respectively.
In data transmission systems, the byte is defined as a contiguous sequence of bits in a serial data stream representing the smallest distinguished unit of data.
A transmission unit might include start bits, stop bits, or parity bits, and thus could vary from 7 to 12 bits to contain a single 7-bit ASCII code.